body {
  /* font is best handled in the body tag, it is the best practice */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
}

/*we put heading into typography as the most intuitive way to think about heading would be typography*/

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  /* the animations we're using below are jittery sometimes, no one knows why this happens, but there is a fix for it, and that is by using the following command. It is however, used to hide the back part of the elements and is not meant for this purpose, but it works and stops the jitters so we use it */
  backface-visibility: hidden;
  margin-bottom: 6rem;

  /* doing the same as above by using & to nest the BEM code and make it shorter*/
  &--main {
    /* we set display as block to get have this element have the whole line for itlself, as span is inline by default */
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;

    /* for the animation to work (the one shown in moveInLeft), we need to specify only two properties in the element's css specifically, and they are animation name and duration as shown below */
    animation-name: moveInLeft;
    animation-duration: 0.85s;

    /* after the basic animation related properties, we can add some more, like animation delay, which does what the name suggests */
    /* animation-delay: 3s; */

    /* to repeat an animation several times, we can use animation count and give the number */
    /* animation-iteration-count: 3; */

    /* there is another important property called animation-timing-function, which tells us how the animation will play out during its lifetime. There are many interesting options at mozilla website, check it out  */
    animation-timing-function: ease-out;

    /* Also, instead of typing so much by typing animation-name, animation-duration and animation-timing-function, we can just write animation and pass these values the way we would normally do in order, and the browser will figure out itself what is what. Example below - 
    animation: moveInLeft 0.85s ease-out; */

    //mq to handle the text size for smaller screens
    @include respond(phone) {
      //width <= 600?
      letter-spacing: 1rem;
      font-size: 5rem;
    }
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.74rem;
    animation: moveInRight 0.85s ease-out;

    //mq to handle the text size for smaller screens
    @include respond(phone) {
      //width <= 600?
      letter-spacing: 0.5rem;
    }
  }

  /* there are 2 types of animations in css. The first one is easier, and it uses the transition property, and then change the properties whenever we want to animate the element, for eg while hovering. The second method uses keyframes and is shown below. */
}

//heading secondary inside head partial
.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;

  //setting display to inline block because otherwise the gradient would be the background of the whole block
  display: inline-block;
  //setting a gradient inside the text
  background-image: linear-gradient(
    to right,
    $color-primary-light,
    $color-primary-dark
  );

  //to make the background gradient appear only inside the text, we'll use a new CSS property, called webkit background clip
  -webkit-background-clip: text;
  //now the clipped text would be visible only behind the text, so we'd have to make the text transparent to be able to see the gradient
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s;

  //mq to handle the text size for smaller screens. Phone is smaller so it comes after the tablet
  @include respond(tab-port) {
    font-size: 3rem;
  }

  @include respond(phone) {
    font-size: 2.5rem;
  }

  //adding animation on hover
  &:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba($color-black, $alpha: 0.2);
  }
}

//styles for the tertiary heading and paragraphs in the about section
.heading-tertiary {
  font-size: $default-font-size;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: $default-font-size;

  //giving some space to paragraphs using margin-bottm, except for the last element
  &:not(:last-child) {
    margin-bottom: 3rem;
  }
}
