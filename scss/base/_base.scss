/*these basic definitions are going to be common for our project, hence placed in _base*/

/* adding the normalising properties to the ::before and ::after pseudo elements too as we are using them in our code and do not want any unexpected behavior. That's why we're normalising everything now */
*,
*::before,
*::after {
  /* normalising the css using cross browser reset, that is, resetting the page to be viewed the same in all browsers. This is because browsers sometimes apply some default margin and heading to elements which we don't want. We can also usea library's to do this or do it manually like this*/
  margin: 0;
  padding: 0;

  /* use inheritance whereever possible */
  box-sizing: inherit;
}

html {
  /* using % is a better practice than using hardcoded pixels, 62.5% because 10 is 62.5% of 16px, which was the default font-size in the browser. This property defines what 1 rem is inside the document */
  font-size: 62.5%;
  /* also, we'll use rem inside this stylesheet instead of px everywhere because rem is relative to the root font size defined above, so it is very easy to change the font size when we want to adjust it or for responsive beahvior and smaller font size there. Also, we could have used em instead of rem, but that also considers size of parent elements font in addition to the root element's font, and it would require much more copmplicated calculations. Rem is very much straightforward compared to that hence we'll be using it */
}

body {
  /* font is best handled in the body tag, it is the best practice */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  /* this is to make a white border around the whole webpage */
  padding: 3rem;

  /* prevents padding and borders(not margin) to be added to the total height or width of the box. Thus the element doesn't appear any bigger than it should be */
  box-sizing: border-box;
}
